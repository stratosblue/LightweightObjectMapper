// <Auto-Generated/>
using LightweightObjectMapper;

namespace MapperTestLibrary;

internal class InheritClassParent
{
    public int Property1 { get; set; }

    public string Property3 { get; set; }

    public InheritClassParent()
    {
    }
}

internal class InheritClassMapClass1 : InheritClassParent
{
    public double Property2 { get; set; }

    public bool Property4 { get; set; }

    public int? Property5 { get; set; }

    public int? Property6 { get; set; }
}

internal class InheritClassMapClass2 : InheritClassParent
{
    public double Property2 { get; set; }

    public bool Property4 { get; set; }

    public int? Property5 { get; set; }

    public int? Property6 { get; set; }

    public InheritClassMapClass2(int? property5)
    {
        Property5 = property5;
    }
}

file class Extensions
{
    public Extensions()
    {
        new InheritClassMapClass1().MapTo<InheritClassMapClass2>();
        new InheritClassMapClass1().MapTo(new InheritClassMapClass2(0));
        new InheritClassMapClass2(0).MapTo<InheritClassMapClass2>();
    }
}
