// <Auto-Generated/>
using System.Collections.Generic;
using LightweightObjectMapper;

namespace MapperTestLibrary;

internal class SimpleValueIEnumerableClass1
{
    public int[] Property1 { get; set; }

    public double[] Property2 { get; set; }

    public string[] Property3 { get; set; }

    public bool[] Property4 { get; set; }

    public int?[] Property5 { get; set; }

    public int?[] Property6 { get; set; }
}

internal class SimpleValueIEnumerableClass2
{
    public IEnumerable<int> Property1 { get; set; }

    public IEnumerable<double> Property2 { get; set; }

    public IEnumerable<string> Property3 { get; set; }

    public IEnumerable<bool> Property4 { get; set; }

    public IEnumerable<int?> Property5 { get; set; }

    public IEnumerable<int?> Property6 { get; set; }
}

file class Extensions
{
    public Extensions()
    {
        new SimpleValueIEnumerableClass1().MapTo<SimpleValueIEnumerableClass2>();
        new SimpleValueIEnumerableClass1().MapTo(new SimpleValueIEnumerableClass2());
        new SimpleValueIEnumerableClass2().MapTo<SimpleValueIEnumerableClass2>();
    }
}
