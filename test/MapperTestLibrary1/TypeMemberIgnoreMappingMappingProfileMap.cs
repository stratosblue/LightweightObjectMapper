// <Auto-Generated/>
using LightweightObjectMapper;

namespace MapperTestLibrary;

internal class TypeMemberIgnoreMappingMappingProfileMapClass1
{
    public int Property1 { get; set; }

    public double Property2 { get; set; }

    public string Property3 { get; set; }

    public bool Property4 { get; set; }

    public int? Property5 { get; set; }

    public int? Property6 { get; set; }
}

internal class TypeMemberIgnoreMappingMappingProfileMapClass2
{
    public int Property1 { get; set; }

    public double Property2 { get; set; }

    public string Property3 { get; set; }

    public bool Property4 { get; set; }

    public int? Property5 { get; set; }

    public int? Property6 { get; set; }
}

[MappingProfile]
internal partial class TypeMemberIgnoreMappingMappingProfileMapProfile1
    : ITypeMemberIgnoreMapping<TypeMemberIgnoreMappingMappingProfileMapClass2>
{
    public object IgnoreMapping(TypeMemberIgnoreMappingMappingProfileMapClass2 target)
    {
        var _ = target.Property1;
        return new
        {
            P1 = target.Property2 + target.Property3,
            P2 = target.Property5.ToString()
        };
    }
}

file class Extensions
{
    public Extensions()
    {
        new TypeMemberIgnoreMappingMappingProfileMapClass1().MapTo<TypeMemberIgnoreMappingMappingProfileMapClass2>();
        new TypeMemberIgnoreMappingMappingProfileMapClass2().MapTo<TypeMemberIgnoreMappingMappingProfileMapClass2>();
    }
}
