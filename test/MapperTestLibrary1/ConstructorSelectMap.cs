// <Auto-Generated/>
using LightweightObjectMapper;

namespace MapperTestLibrary;

internal class ConstructorSelectMapFullClass1
{
    public int Property1 { get; set; }

    public double Property2 { get; set; }

    public string Property3 { get; set; }

    public bool Property4 { get; set; }

    public int? Property5 { get; set; }

    public int? Property6 { get; set; }
}

internal class ConstructorSelectMapClass1
{
    public int Property1 { get; set; }
}

internal class ConstructorSelectMapClass2
{
    public double Property2 { get; set; }
}


internal class ConstructorSelectMapClass3
{
    public string Property3 { get; set; }
}


internal class ConstructorSelectMapFullClass2
{
    public int Property1 { get; set; }

    public double Property2 { get; set; }

    public string Property3 { get; set; }

    public bool Property4 { get; set; }

    public int? Property5 { get; set; }

    public int? Property6 { get; set; }

    public ConstructorSelectMapFullClass2(int property1)
    {
        Property1 = property1;
    }

    public ConstructorSelectMapFullClass2(double property2)
    {
        Property2 = property2;
    }

    public ConstructorSelectMapFullClass2(string property3)
    {
        Property3 = property3;
    }

    public ConstructorSelectMapFullClass2(int property1, double property2, string property3, bool property4)
    {
        Property1 = property1;
        Property2 = property2;
        Property3 = property3;
        Property4 = property4;
    }
}

file class Extensions
{
    public Extensions()
    {
        new ConstructorSelectMapFullClass1().MapTo<ConstructorSelectMapFullClass2>();
        new ConstructorSelectMapClass1().MapTo<ConstructorSelectMapFullClass2>();
        new ConstructorSelectMapClass2().MapTo<ConstructorSelectMapFullClass2>();
        new ConstructorSelectMapClass3().MapTo<ConstructorSelectMapFullClass2>();
    }
}
