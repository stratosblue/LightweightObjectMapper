// <Auto-Generated/>
using LightweightObjectMapper;

namespace MapperTestLibrary;

internal class PostMappingMappingProfileMapClass1
{
    public int Property1 { get; set; }

    public double Property2 { get; set; }

    public string Property3 { get; set; }

    public bool Property4 { get; set; }

    public int? Property5 { get; set; }

    public int? Property6 { get; set; }
}

internal class PostMappingMappingProfileMapClass2
{
    public int Property1 { get; set; }

    public double Property2 { get; set; }

    public string Property3 { get; set; }

    public bool Property4 { get; set; }

    public int? Property5 { get; set; }

    public int? Property6 { get; set; }
}

[MappingProfile]
internal partial class PostMappingMappingProfileMapProfile1
    : IPostMapping<PostMappingMappingProfileMapClass1, PostMappingMappingProfileMapClass2>
    , IPostMapping<PostMappingMappingProfileMapClass2, PostMappingMappingProfileMapClass2>
{
    public PostMappingMappingProfileMapClass2 PostMapping(PostMappingMappingProfileMapClass1 source, PostMappingMappingProfileMapClass2 target)
    {
        target.Property6 = source.Property1;
        return target;
    }

    public PostMappingMappingProfileMapClass2 PostMapping(PostMappingMappingProfileMapClass2 source, PostMappingMappingProfileMapClass2 target)
    {
        target.Property6 = source.Property1;
        return target;
    }
}

file class Extensions
{
    public Extensions()
    {
        new PostMappingMappingProfileMapClass1().MapTo<PostMappingMappingProfileMapClass2>();
        new PostMappingMappingProfileMapClass2().MapTo<PostMappingMappingProfileMapClass2>();
    }
}
