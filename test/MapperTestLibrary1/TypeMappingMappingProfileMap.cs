// <Auto-Generated/>
using LightweightObjectMapper;

namespace MapperTestLibrary;

internal class TypeMappingMappingProfileMapClass1
{
    public int Property1 { get; set; }

    public double Property2 { get; set; }

    public string Property3 { get; set; }

    public bool Property4 { get; set; }

    public int? Property5 { get; set; }

    public int? Property6 { get; set; }
}

internal class TypeMappingMappingProfileMapClass2
{
    public int Property1 { get; set; }

    public double Property2 { get; set; }

    public string Property3 { get; set; }

    public bool Property4 { get; set; }

    public int? Property5 { get; set; }

    public int? Property6 { get; set; }
}

[MappingProfile]
internal partial class TypeMappingMappingProfileMapProfile1
    : ITypeMapping<TypeMappingMappingProfileMapClass1, TypeMappingMappingProfileMapClass2>
    , ITypeMapping<TypeMappingMappingProfileMapClass2, TypeMappingMappingProfileMapClass2>
{
    public TypeMappingMappingProfileMapClass2 TypeMapping(TypeMappingMappingProfileMapClass1 source)
    {
        return new TypeMappingMappingProfileMapClass2()
        {
            Property6 = int.MaxValue,
        };
    }

    public TypeMappingMappingProfileMapClass2 TypeMapping(TypeMappingMappingProfileMapClass2 source)
    {
        return new TypeMappingMappingProfileMapClass2()
        {
            Property6 = int.MinValue,
        };
    }
}

file class Extensions
{
    public Extensions()
    {
        new TypeMappingMappingProfileMapClass1().MapTo<TypeMappingMappingProfileMapClass2>();
        new TypeMappingMappingProfileMapClass2().MapTo<TypeMappingMappingProfileMapClass2>();
    }
}
