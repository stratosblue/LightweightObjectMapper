// <Auto-Generated/>
using System.Collections.Generic;
using LightweightObjectMapper;

namespace MapperTestLibrary;

internal class SimpleClassArrayMapClass1
{
    public int Property1 { get; set; }

    public double Property2 { get; set; }

    public string Property3 { get; set; }

    public bool Property4 { get; set; }

    public int? Property5 { get; set; }

    public int? Property6 { get; set; }
}

internal class SimpleClassArrayMapClass2
{
    public int Property1 { get; set; }

    public double Property2 { get; set; }

    public string Property3 { get; set; }

    public bool Property4 { get; set; }

    public int? Property5 { get; set; }

    public int? Property6 { get; set; }
}

file class Extensions
{
    public Extensions()
    {
        new List<SimpleClassArrayMapClass1>().MapTo<SimpleClassArrayMapClass2[]>();
        new List<SimpleClassArrayMapClass2>().MapTo<SimpleClassArrayMapClass2[]>();

        new SimpleClassArrayMapClass1[0].MapTo<SimpleClassArrayMapClass2[]>();
        new SimpleClassArrayMapClass2[0].MapTo<SimpleClassArrayMapClass2[]>();
    }
}
